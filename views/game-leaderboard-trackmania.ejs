<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trackmania Leaderboard</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #2c3e50;
            color: white;
            margin: 0;
            padding: 0;
        }
        .container {
            display: flex;
            width: 100%;
            margin: auto;
            overflow: hidden;
        }
        .left-column {
            width: 33%;
            padding: 20px;
            border-right: 1px solid #ccc;
        }
        .right-column {
            width: 67%;
            padding: 20px;
        }
        h1, h2, h3 {
            text-align: center;
        }
        .btn {
            display: inline-block;
            padding: 10px 20px;
            margin: 10px 0;
            background-color: #3498db;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            text-align: center;
            cursor: pointer;
        }
        .btn:hover {
            background-color: #2980b9;
        }
        .leaderboard-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1rem;
        }
        .leaderboard-box {
            background-color: #34495e;
            color: white;
            padding: 1rem;
            border-radius: 0.5rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .leaderboard-box ul {
            list-style: none;
            padding: 0;
        }
        .leaderboard-box ul li {
            margin-bottom: 0.5rem;
        }
        .leaderboard-box .btn-group {
            display: flex;
            justify-content: center;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="left-column">
            <h2>Total ELO Leaderboard</h2>
            <ul id="total-elo-leaderboard">
                <% if (typeof totalEloLeaderboard !== 'undefined' && totalEloLeaderboard.length > 0) { %>
                    <% totalEloLeaderboard.forEach(player => { %>
                        <li><%= player.name %> - <%= player.totalElo %> ELO</li>
                    <% }); %>
                <% } else { %>
                    <li>No players available</li>
                <% } %>
            </ul>
        </div>
        <div class="right-column">
            <h1>Trackmania Leaderboard</h1>
            <div style="text-align: center;">
                <a class="btn" href="/games/<%= game._id %>/input">Submit New Score</a>
                <% if (userRole === 'general admin' || userRole === 'head admin') { %>
                    <a class="btn" href="/games/<%= game._id %>/verify">Verify Runs</a>
                <% } %>
                <a class="btn" href="/">Home</a>
            </div>
            <div class="leaderboard-container">
                <% maps.forEach(map => { %>
                    <div class="leaderboard-box" id="leaderboard-<%= map._id %>">
                        <h2><%= map.name %></h2>
                        <div class="btn-group">
                            <button class="btn" onclick="toggleLeaderboard('<%= map._id %>')">Default</button>
                        </div>
                        <ul></ul>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>
    <script>
        const leaderboardStates = ['default', 'verified', 'unverified'];
        const leaderboardStateNames = {
            'default': 'Default',
            'verified': 'Verified',
            'unverified': 'Unverified'
        };

        function formatTime(milliseconds) {
            const minutes = Math.floor(milliseconds / 60000);
            const seconds = Math.floor((milliseconds % 60000) / 1000);
            const ms = milliseconds % 1000;
            return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}.${ms}`;
        }

        async function loadLeaderboard(mapId, type) {
            const response = await fetch(`/trackmania/leaderboard/${mapId}/${type}`);
            const data = await response.json();

            const leaderboardBox = document.getElementById(`leaderboard-${mapId}`);
            const ul = leaderboardBox.querySelector('ul');
            ul.innerHTML = '';

            data.forEach(player => {
                const li = document.createElement('li');
                li.innerHTML = `
                    ${player.isApproved ? '✔' : '❌'} 
                    ${player.playerName} 
                    ${formatTime(player.time)}
                    ${type === 'default' ? ` - ${player.points} points` : ''}
                `;
                ul.appendChild(li);
            });
        }

        function toggleLeaderboard(mapId) {
            const button = document.querySelector(`#leaderboard-${mapId} .btn-group .btn`);
            const currentType = button.getAttribute('data-type');
            const currentIndex = leaderboardStates.indexOf(currentType);
            const nextIndex = (currentIndex + 1) % leaderboardStates.length;
            const nextType = leaderboardStates[nextIndex];

            button.setAttribute('data-type', nextType);
            button.innerHTML = leaderboardStateNames[nextType];

            loadLeaderboard(mapId, nextType);
        }

        async function loadTotalEloLeaderboard() {
            const response = await fetch(`/trackmania/total-elo-leaderboard`);
            const data = await response.json();

            const ul = document.getElementById('total-elo-leaderboard');
            ul.innerHTML = '';

            data.forEach(player => {
                const li = document.createElement('li');
                li.innerHTML = `${player.name} - ${player.totalElo} ELO`;
                ul.appendChild(li);
            });
        }

        // Initialize buttons and load default leaderboards on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadTotalEloLeaderboard();
            const mapElements = document.querySelectorAll('.leaderboard-box');
            mapElements.forEach(mapElement => {
                const mapId = mapElement.id.split('-')[1];
                const button = mapElement.querySelector('.btn-group .btn');
                button.setAttribute('data-type', 'default');
                loadLeaderboard(mapId, 'default');
            });
        });
    </script>
</body>
</html>
